package Analizadores; 


import java_cup.runtime.*; 
import java.util.ArrayList;

 
parser code 
{: 

//variables utilizadas para el analisis sintactico
private boolean estado = false;


public boolean getEstado(){
	return estado;
}

/**Metodo al que se llama automáticamente ante algún error sintactico.*/ 
public void syntax_error(Symbol s){ 
 System.out.println("Error en la Línea " + (s.right+1) +" Columna " +s.left+ ". Identificador " +s.value + " no reconocido." ); 
} 
 /**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/ 
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
 System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido."); 
} 
:} 

terminal abrir_tag, r_configuracion, r_fondo, r_disenio,r_figura, r_nombre, r_vida, r_tipo, r_arma, r_bloque, r_bomba, r_bonus, 
r_enemigo, r_heroe, r_meta, r_destruir, r_descripcion, cerrar_tag, llave_abrir, s_igual, atributo_nombre, atributo_descripcion,
 s_punto_coma, r_imagen, s_comillas, path, numero, s_coma, llave_cerrar, s_guion;

non terminal INICIO, ARCHIVO_CONFIGURACION, CONFIGURACION, CONFIGURACION_FONDO, FONDO, DECLARAR_ATRIBUTOS, ATRIBUTOS, 
ATRIBUTO_NOMBRE, ATRIBUTO_VIDA, ATRIBUTO_DESTRUIR, ATRIBUTO_IMAGEN, ATRIBUTO_TIPO, ATRIBUTO_DESCRIPCION, TIPO;
  
start with INICIO;  

INICIO ::=  ARCHIVO_CONFIGURACION{:parser.estado = true;:};

ARCHIVO_CONFIGURACION ::= abrir_tag r_configuracion cerrar_tag CONFIGURACION abrir_tag s_guion r_configuracion cerrar_tag;
			
CONFIGURACION ::=	abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag
					abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag
					abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag
				   	|abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag
				   	abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag
					abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag
					|abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag 
					abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag
				   	abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag
				   	|abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag
				   	abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag
				   	abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag
				   	|abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag
				   	abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag
				   	abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag;

CONFIGURACION_FONDO ::=	llave_abrir FONDO llave_cerrar s_coma CONFIGURACION_FONDO
						|llave_abrir FONDO llave_cerrar; 

FONDO ::=	r_nombre s_igual atributo_nombre s_punto_coma r_imagen s_igual s_comillas path s_comillas s_punto_coma
			|r_imagen s_igual s_comillas path s_comillas s_punto_coma r_nombre s_igual atributo_nombre s_punto_coma;

DECLARAR_ATRIBUTOS ::=  llave_abrir ATRIBUTOS llave_cerrar s_coma DECLARAR_ATRIBUTOS
						|llave_abrir ATRIBUTOS llave_cerrar; 

ATRIBUTOS ::= 	ATRIBUTO_NOMBRE ATRIBUTOS
				|ATRIBUTO_VIDA ATRIBUTOS
				|ATRIBUTO_DESTRUIR ATRIBUTOS
				|ATRIBUTO_IMAGEN ATRIBUTOS
				|ATRIBUTO_TIPO ATRIBUTOS
				|ATRIBUTO_DESCRIPCION ATRIBUTOS
				|ATRIBUTO_NOMBRE
				|ATRIBUTO_VIDA
				|ATRIBUTO_DESTRUIR
				|ATRIBUTO_IMAGEN
				|ATRIBUTO_TIPO
				|ATRIBUTO_DESCRIPCION;

				   	
ATRIBUTO_NOMBRE ::= r_nombre s_igual atributo_nombre s_punto_coma;

ATRIBUTO_DESTRUIR ::= r_destruir s_igual numero s_punto_coma ;

ATRIBUTO_VIDA ::= r_vida s_igual numero:n s_punto_coma{:int n_aux = Integer.parseInt(n.toString());
if(n_aux < 101 && n_aux > 0){ n_aux = n_aux / 10; n_aux = n_aux  *10;} else{n_aux = 100;}:};

ATRIBUTO_IMAGEN ::= r_imagen s_igual s_comillas path:p s_comillas s_punto_coma {:RESULT = p.toString();:};

ATRIBUTO_TIPO  ::= r_tipo s_igual TIPO:t s_punto_coma {:RESULT = t.toString();:};

ATRIBUTO_DESCRIPCION ::= r_descripcion s_igual s_comillas atributo_nombre s_comillas s_punto_coma;

TIPO ::= 	r_heroe:r   {:RESULT = r;:}
			|r_enemigo:r {:RESULT = r;:}
			|r_meta:r   {:RESULT = r;:}
			|r_bomba:r  {:RESULT = r;:}
			|r_arma:r   {:RESULT = r;:}
			|r_bonus:r  {:RESULT = r;:}
			|r_bloque:r {:RESULT = r;:};
					
					