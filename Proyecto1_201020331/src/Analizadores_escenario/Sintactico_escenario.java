
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20150326 (SVN rev 63)
//----------------------------------------------------

package Analizadores_escenario;

import Logica.Posicion;
import Logica.Escenario;
import Logica.Arbol_AST;
import java_cup.runtime.*;
import javax.swing.JOptionPane;
import Logica.Error_encontrado;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20150326 (SVN rev 63) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Sintactico_escenario extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Tabla_simbolos_escenario.class;
}

  /** Default constructor. */
  @Deprecated
  public Sintactico_escenario() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Sintactico_escenario(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintactico_escenario(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\047\000\002\002\004\000\002\002\003\000\002\003" +
    "\004\000\002\003\003\000\002\003\003\000\002\004\031" +
    "\000\002\005\004\000\002\005\004\000\002\005\004\000" +
    "\002\005\004\000\002\005\004\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\006\012\000\002\007\012" +
    "\000\002\010\012\000\002\011\012\000\002\012\012\000" +
    "\002\013\022\000\002\013\022\000\002\013\003\000\002" +
    "\014\022\000\002\014\022\000\002\014\003\000\002\015" +
    "\004\000\002\015\003\000\002\015\003\000\002\016\004" +
    "\000\002\016\004\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\017\013\000\002\017\013\000\002" +
    "\020\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\253\000\006\003\004\004\010\001\002\000\006\002" +
    "\ufffd\004\ufffd\001\002\000\006\002\000\004\010\001\002" +
    "\000\004\002\254\001\002\000\006\002\ufffe\004\ufffe\001" +
    "\002\000\004\005\011\001\002\000\004\006\012\001\002" +
    "\000\004\023\013\001\002\000\004\030\014\001\002\000" +
    "\004\024\015\001\002\000\004\007\016\001\002\000\004" +
    "\023\017\001\002\000\004\030\020\001\002\000\004\024" +
    "\021\001\002\000\004\010\022\001\002\000\004\023\023" +
    "\001\002\000\004\031\024\001\002\000\004\024\025\001" +
    "\002\000\004\011\026\001\002\000\004\023\027\001\002" +
    "\000\004\031\030\001\002\000\004\026\031\001\002\000" +
    "\006\003\034\004\041\001\002\000\004\004\ufff2\001\002" +
    "\000\004\004\ufff3\001\002\000\004\004\ufff1\001\002\000" +
    "\004\004\ufff4\001\002\000\004\004\ufff6\001\002\000\004" +
    "\004\ufff5\001\002\000\004\004\250\001\002\000\014\012" +
    "\042\015\046\016\044\017\043\022\045\001\002\000\004" +
    "\026\175\001\002\000\004\026\124\001\002\000\004\026" +
    "\116\001\002\000\004\026\103\001\002\000\004\026\047" +
    "\001\002\000\006\003\053\030\051\001\002\000\006\004" +
    "\uffdf\030\uffdf\001\002\000\004\027\063\001\002\000\006" +
    "\004\uffe0\030\uffe0\001\002\000\006\004\uffde\030\uffde\001" +
    "\002\000\006\004\057\030\051\001\002\000\006\004\uffe1" +
    "\030\uffe1\001\002\000\006\004\uffe2\030\uffe2\001\002\000" +
    "\004\025\060\001\002\000\004\015\061\001\002\000\004" +
    "\026\062\001\002\000\004\004\uffef\001\002\000\004\031" +
    "\064\001\002\000\006\032\066\033\065\001\002\000\004" +
    "\031\074\001\002\000\004\031\067\001\002\000\004\033" +
    "\070\001\002\000\004\031\071\001\002\000\004\034\072" +
    "\001\002\000\004\024\073\001\002\000\006\004\uffdd\030" +
    "\uffdd\001\002\000\006\032\076\034\075\001\002\000\004" +
    "\024\102\001\002\000\004\031\077\001\002\000\004\034" +
    "\100\001\002\000\004\024\101\001\002\000\006\004\uffdc" +
    "\030\uffdc\001\002\000\006\004\uffdb\030\uffdb\001\002\000" +
    "\004\030\104\001\002\000\004\027\112\001\002\000\004" +
    "\004\106\001\002\000\004\025\107\001\002\000\004\022" +
    "\110\001\002\000\004\026\111\001\002\000\004\004\uffec" +
    "\001\002\000\004\031\113\001\002\000\004\033\114\001" +
    "\002\000\004\031\115\001\002\000\004\034\075\001\002" +
    "\000\006\003\053\030\051\001\002\000\006\004\120\030" +
    "\051\001\002\000\004\025\121\001\002\000\004\016\122" +
    "\001\002\000\004\026\123\001\002\000\004\004\uffee\001" +
    "\002\000\006\003\126\004\127\001\002\000\004\004\171" +
    "\001\002\000\004\004\uffe6\001\002\000\006\020\130\021" +
    "\131\001\002\000\004\026\153\001\002\000\004\026\132" +
    "\001\002\000\006\003\134\030\104\001\002\000\006\004" +
    "\uffe4\030\uffe4\001\002\000\006\004\uffe3\030\uffe3\001\002" +
    "\000\006\004\137\030\104\001\002\000\006\004\uffe5\030" +
    "\uffe5\001\002\000\004\025\140\001\002\000\004\021\141" +
    "\001\002\000\004\026\142\001\002\000\004\004\143\001" +
    "\002\000\004\020\144\001\002\000\004\026\145\001\002" +
    "\000\006\003\134\030\104\001\002\000\006\004\147\030" +
    "\104\001\002\000\004\025\150\001\002\000\004\020\151" +
    "\001\002\000\004\026\152\001\002\000\004\004\uffe7\001" +
    "\002\000\006\003\134\030\104\001\002\000\006\004\155" +
    "\030\104\001\002\000\004\025\156\001\002\000\004\020" +
    "\157\001\002\000\004\026\160\001\002\000\004\004\161" +
    "\001\002\000\004\021\162\001\002\000\004\026\163\001" +
    "\002\000\006\003\134\030\104\001\002\000\006\004\165" +
    "\030\104\001\002\000\004\025\166\001\002\000\004\021" +
    "\167\001\002\000\004\026\170\001\002\000\004\004\uffe8" +
    "\001\002\000\004\025\172\001\002\000\004\017\173\001" +
    "\002\000\004\026\174\001\002\000\004\004\uffed\001\002" +
    "\000\006\003\177\004\200\001\002\000\004\004\237\001" +
    "\002\000\004\004\uffe9\001\002\000\006\013\202\014\201" +
    "\001\002\000\004\026\221\001\002\000\004\026\203\001" +
    "\002\000\004\030\104\001\002\000\004\004\205\001\002" +
    "\000\004\025\206\001\002\000\004\013\207\001\002\000" +
    "\004\026\210\001\002\000\004\004\211\001\002\000\004" +
    "\014\212\001\002\000\004\026\213\001\002\000\006\003" +
    "\134\030\104\001\002\000\006\004\215\030\104\001\002" +
    "\000\004\025\216\001\002\000\004\014\217\001\002\000" +
    "\004\026\220\001\002\000\004\004\uffeb\001\002\000\006" +
    "\003\134\030\104\001\002\000\006\004\223\030\104\001" +
    "\002\000\004\025\224\001\002\000\004\014\225\001\002" +
    "\000\004\026\226\001\002\000\004\004\227\001\002\000" +
    "\004\013\230\001\002\000\004\026\231\001\002\000\004" +
    "\030\104\001\002\000\004\004\233\001\002\000\004\025" +
    "\234\001\002\000\004\013\235\001\002\000\004\026\236" +
    "\001\002\000\004\004\uffea\001\002\000\004\025\240\001" +
    "\002\000\004\012\241\001\002\000\004\026\242\001\002" +
    "\000\004\004\ufff0\001\002\000\004\004\ufff8\001\002\000" +
    "\004\004\ufff7\001\002\000\004\004\ufffb\001\002\000\004" +
    "\004\ufff9\001\002\000\004\004\ufffa\001\002\000\016\012" +
    "\042\015\046\016\044\017\043\022\045\025\251\001\002" +
    "\000\004\005\252\001\002\000\004\026\253\001\002\000" +
    "\006\002\ufffc\004\ufffc\001\002\000\004\002\001\001\002" +
    "\000\006\002\uffff\004\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\253\000\010\002\005\003\004\004\006\001\001\000" +
    "\002\001\001\000\004\004\254\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\005\037\006\035" +
    "\007\036\010\034\011\032\012\031\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\006\244\007" +
    "\246\010\245\011\242\012\243\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\016\053\017\047" +
    "\020\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\017\054\020\055" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\020\104\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\016\116\017\047\020" +
    "\051\001\001\000\006\017\054\020\055\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\014\124\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\015\134\020\132\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\020\135\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\145\020\132\001\001\000\004\020\135\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\153\020\132\001\001\000\004" +
    "\020\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\163\020\132\001\001\000\004\020" +
    "\135\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\175" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\203" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\015\213\020\132\001\001\000" +
    "\004\020\135\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\221\020" +
    "\132\001\001\000\004\020\135\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\020\231\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintactico_escenario$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintactico_escenario$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintactico_escenario$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


 

//variables utilizadas para el analisis sintactico
private boolean estado = true;
private Posicion posicion = null;
private Escenario escenario  = new Escenario();

public boolean getEstado(){
	return estado;
}

public void setEscenario(){
	escenario = new Escenario();
}

public void agregar_posicion(Posicion p){
	if(Arbol_AST.getTabla_objetos().containsKey(p.getNombre())){
		escenario.getLista_posicion().add(p);
	}
}

public void insertar_escenario(Escenario esc){

	boolean encontrado = false;
	int cont = 0;
	for(cont = 0; cont > Arbol_AST.getLista_escenarios().size(); cont++){
            if(Arbol_AST.getLista_escenarios().get(cont).getNombre().equals(esc.getNombre())){
                Arbol_AST.getLista_escenarios().add(cont, esc);
                encontrado = true;
                break;
            }//verifico que si el escenario existe, si es asi, sobrescribo
	}//fin del contador para recorrer la lista de escenarios
        if(encontrado == false){
            Arbol_AST.getLista_escenarios().add(cont, esc);
        }//si no fue encontrado en la lista se agrega al final
		
}//fin del metodo para almacenar escenarios

/**Metodo al que se llama automáticamente ante algún error sintactico.*/ 
public void syntax_error(Symbol s){ 
 //System.out.println("Error en la Línea " + (s.right+1) +" Columna " +s.left+ ". Identificador " +s.value + " no reconocido." ); 
 Error_encontrado error_sintactico = new Error_encontrado("Archivo Escenario",s.value.toString(), "", s.left, s.right+1, true);
 Arbol_AST.getLista_errores().add(error_sintactico);
} 
 /**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/ 
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
	System.out.println("Error en la Línea " + (s.right+1) +" Columna " +s.left+ ". Identificador " +s.value + " no reconocido." ); 
} 


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Sintactico_escenario$actions {
  private final Sintactico_escenario parser;

  /** Constructor */
  CUP$Sintactico_escenario$actions(Sintactico_escenario parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Sintactico_escenario$do_action_part00000000(
    int                        CUP$Sintactico_escenario$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico_escenario$parser,
    java.util.Stack            CUP$Sintactico_escenario$stack,
    int                        CUP$Sintactico_escenario$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintactico_escenario$result;

      /* select the action based on the action number */
      switch (CUP$Sintactico_escenario$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).value;
		RESULT = start_val;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintactico_escenario$parser.done_parsing();
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= ARCHIVO_ESCENARIO 
            {
              Object RESULT =null;
		
			if(parser.estado == true){
                JOptionPane.showMessageDialog(null,"NO SE HAN ENCONTRADO "
                + "ERRORES","EXITO",JOptionPane.WARNING_MESSAGE);	
			}else{
     			JOptionPane.showMessageDialog(null,"EXISTEN ERRORES LEXICOS O "
                + "SINTACTICOS\n CONSULTE EL AREA DE ERRORES"
                + "","ERROR",JOptionPane.ERROR_MESSAGE);
			} 
			
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARCHIVO_ESCENARIO ::= ARCHIVO_ESCENARIO ESCENARIO 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("ARCHIVO_ESCENARIO",1, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARCHIVO_ESCENARIO ::= ESCENARIO 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("ARCHIVO_ESCENARIO",1, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ARCHIVO_ESCENARIO ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("ARCHIVO_ESCENARIO",1, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ESCENARIO ::= abrir_tag r_escenario r_nombre s_igual atributo_nombre s_punto_coma r_fondo s_igual atributo_nombre s_punto_coma r_ancho s_igual numero s_punto_coma r_alto s_igual numero cerrar_tag CONFIGURACION_ESCENARIO abrir_tag s_guion r_escenario cerrar_tag 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-18)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-18)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-18)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-14)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-14)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-14)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-10)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-10)).right;
		Object x = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-10)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).right;
		Object y = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).value;
		
				escenario.setNombre(e.toString()); 
				escenario.setFondo(p.toString());
				escenario.setLargo(Integer.parseInt(x.toString()));
				escenario.setAncho(Integer.parseInt(y.toString()));
				insertar_escenario(escenario);
				
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("ESCENARIO",2, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-22)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CONFIGURACION_ESCENARIO ::= CONFIGURACION_ESCENARIO PERSONAJE 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CONFIGURACION_ESCENARIO ::= CONFIGURACION_ESCENARIO PAREDES 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CONFIGURACION_ESCENARIO ::= CONFIGURACION_ESCENARIO SUELO 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CONFIGURACION_ESCENARIO ::= CONFIGURACION_ESCENARIO EXTRAS 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CONFIGURACION_ESCENARIO ::= CONFIGURACION_ESCENARIO META 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CONFIGURACION_ESCENARIO ::= PERSONAJE 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CONFIGURACION_ESCENARIO ::= PAREDES 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CONFIGURACION_ESCENARIO ::= SUELO 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CONFIGURACION_ESCENARIO ::= EXTRAS 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CONFIGURACION_ESCENARIO ::= META 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONFIGURACION_ESCENARIO ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_ESCENARIO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PERSONAJE ::= abrir_tag r_personajes cerrar_tag CONFIGURACION_PERSONAJE abrir_tag s_guion r_personajes cerrar_tag 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("PERSONAJE",4, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PAREDES ::= abrir_tag r_paredes cerrar_tag DECLARACION_MULTIPLE2 abrir_tag s_guion r_paredes cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		agregar_posicion((Posicion)p1);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("PAREDES",5, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SUELO ::= abrir_tag r_suelo cerrar_tag DECLARACION_MULTIPLE2 abrir_tag s_guion r_suelo cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		agregar_posicion((Posicion)p1);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("SUELO",6, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // EXTRAS ::= abrir_tag r_extras cerrar_tag CONFIGURACION_EXTRAS abrir_tag s_guion r_extras cerrar_tag 
            {
              Object RESULT =null;

              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("EXTRAS",7, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // META ::= abrir_tag r_meta cerrar_tag DECLARACION1 abrir_tag s_guion r_meta cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		agregar_posicion((Posicion)p1);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("META",8, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONFIGURACION_PERSONAJE ::= abrir_tag r_heroes cerrar_tag DECLARACION1 abrir_tag s_guion r_heroes cerrar_tag abrir_tag r_villanos cerrar_tag DECLARACION_MULTIPLE1 abrir_tag s_guion r_villanos cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		agregar_posicion((Posicion)p1); agregar_posicion((Posicion)p2);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_PERSONAJE",9, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-15)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONFIGURACION_PERSONAJE ::= abrir_tag r_villanos cerrar_tag DECLARACION_MULTIPLE1 abrir_tag s_guion r_villanos cerrar_tag abrir_tag r_heroes cerrar_tag DECLARACION1 abrir_tag s_guion r_heroes cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		agregar_posicion((Posicion)p1); agregar_posicion((Posicion)p2);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_PERSONAJE",9, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-15)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONFIGURACION_PERSONAJE ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_PERSONAJE",9, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONFIGURACION_EXTRAS ::= abrir_tag r_armas cerrar_tag DECLARACION_MULTIPLE1 abrir_tag s_guion r_armas cerrar_tag abrir_tag r_bonus cerrar_tag DECLARACION_MULTIPLE1 abrir_tag s_guion r_bonus cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		escenario.getLista_posicion().add((Posicion)p1); escenario.getLista_posicion().add((Posicion)p2);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_EXTRAS",10, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-15)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONFIGURACION_EXTRAS ::= abrir_tag r_bonus cerrar_tag DECLARACION_MULTIPLE1 abrir_tag s_guion r_bonus cerrar_tag abrir_tag r_armas cerrar_tag DECLARACION_MULTIPLE1 abrir_tag s_guion r_armas cerrar_tag 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-12)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		escenario.getLista_posicion().add((Posicion)p1); escenario.getLista_posicion().add((Posicion)p2);
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_EXTRAS",10, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-15)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONFIGURACION_EXTRAS ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_EXTRAS",10, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // DECLARACION_MULTIPLE1 ::= DECLARACION_MULTIPLE1 DECLARACION1 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.peek()).value;
		agregar_posicion((Posicion)p1); RESULT = p2;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE1",11, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // DECLARACION_MULTIPLE1 ::= DECLARACION1 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.peek()).value;
		RESULT = p;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE1",11, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // DECLARACION_MULTIPLE1 ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE1",11, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // DECLARACION_MULTIPLE2 ::= DECLARACION_MULTIPLE2 DECLARACION1 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.peek()).value;
		agregar_posicion((Posicion)p1); RESULT = p2;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE2",12, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // DECLARACION_MULTIPLE2 ::= DECLARACION_MULTIPLE2 DECLARACION2 
            {
              Object RESULT =null;
		int p1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).left;
		int p1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).right;
		Object p1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.peek()).value;
		agregar_posicion((Posicion)p1); RESULT = p2;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE2",12, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // DECLARACION_MULTIPLE2 ::= DECLARACION1 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.peek()).value;
		RESULT = p;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE2",12, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // DECLARACION_MULTIPLE2 ::= DECLARACION2 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.peek()).value;
		RESULT = p;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE2",12, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // DECLARACION_MULTIPLE2 ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION_MULTIPLE2",12, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // DECLARACION2 ::= atributo_nombre abrir_p numero s_dospuntos numero s_coma numero cerrar_p s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)).value;
		int x1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).left;
		int x1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).right;
		Object x1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).value;
		int x2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int x2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object x2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).right;
		Object y = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).value;
		posicion = new Posicion(); posicion.setNombre(n.toString()); posicion.setX_ini(Integer.parseInt(x1.toString()));
				  	posicion.setX_fin(Integer.parseInt(x2.toString())); posicion.setY_ini(Integer.parseInt(y.toString())); 
				  	RESULT = posicion;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION2",13, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // DECLARACION2 ::= atributo_nombre abrir_p numero s_coma numero s_dospuntos numero cerrar_p s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).right;
		Object x = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).value;
		int y1left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int y1right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object y1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		int y2left = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).left;
		int y2right = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).right;
		Object y2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).value;
		posicion = new Posicion(); posicion.setNombre(n.toString()); posicion.setX_ini(Integer.parseInt(x.toString()));
				  	posicion.setY_ini(Integer.parseInt(y1.toString())); posicion.setY_fin(Integer.parseInt(y2.toString())); 
				  	RESULT = posicion;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION2",13, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // DECLARACION1 ::= atributo_nombre abrir_p numero s_coma numero cerrar_p s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).right;
		Object x = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-4)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).right;
		Object y = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-2)).value;
		posicion = new Posicion(); posicion.setNombre(n.toString()); posicion.setX_ini(Integer.parseInt(x.toString()));
				  posicion.setY_ini(Integer.parseInt(y.toString())); RESULT = posicion;
              CUP$Sintactico_escenario$result = parser.getSymbolFactory().newSymbol("DECLARACION1",14, ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.elementAt(CUP$Sintactico_escenario$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico_escenario$stack.peek()), RESULT);
            }
          return CUP$Sintactico_escenario$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Sintactico_escenario$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Sintactico_escenario$do_action(
    int                        CUP$Sintactico_escenario$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico_escenario$parser,
    java.util.Stack            CUP$Sintactico_escenario$stack,
    int                        CUP$Sintactico_escenario$top)
    throws java.lang.Exception
    {
              return CUP$Sintactico_escenario$do_action_part00000000(
                               CUP$Sintactico_escenario$act_num,
                               CUP$Sintactico_escenario$parser,
                               CUP$Sintactico_escenario$stack,
                               CUP$Sintactico_escenario$top);
    }
}

}
