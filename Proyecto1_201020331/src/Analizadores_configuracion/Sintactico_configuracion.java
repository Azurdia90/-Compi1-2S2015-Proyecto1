
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20150326 (SVN rev 63)
//----------------------------------------------------

package Analizadores_configuracion;

import java.io.File;
import Logica.Objeto;
import Logica.Arbol_AST;
import java_cup.runtime.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import Logica.Error_encontrado;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20150326 (SVN rev 63) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Sintactico_configuracion extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Tabla_simbolos_configuracion.class;
}

  /** Default constructor. */
  @Deprecated
  public Sintactico_configuracion() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Sintactico_configuracion(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintactico_configuracion(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\060\000\002\002\004\000\002\002\003\000\002\003" +
    "\012\000\002\003\003\000\002\004\013\000\002\004\013" +
    "\000\002\004\013\000\002\004\012\000\002\004\012\000" +
    "\002\004\012\000\002\004\003\000\002\005\007\000\002" +
    "\005\005\000\002\005\003\000\002\006\012\000\002\006" +
    "\012\000\002\007\007\000\002\007\005\000\002\007\003" +
    "\000\002\010\004\000\002\010\004\000\002\010\004\000" +
    "\002\010\004\000\002\010\004\000\002\010\004\000\002" +
    "\010\004\000\002\010\003\000\002\010\003\000\002\010" +
    "\003\000\002\010\003\000\002\010\003\000\002\010\003" +
    "\000\002\010\003\000\002\011\006\000\002\013\006\000" +
    "\002\012\006\000\002\014\006\000\002\015\006\000\002" +
    "\016\006\000\002\016\003\000\002\017\006\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\207\000\006\003\005\004\007\001\002\000\004\002" +
    "\000\001\002\000\004\002\ufffe\001\002\000\004\002\211" +
    "\001\002\000\004\005\010\001\002\000\004\026\011\001" +
    "\002\000\006\003\012\004\014\001\002\000\004\004\ufff7" +
    "\001\002\000\004\004\160\001\002\000\010\006\016\007" +
    "\015\010\017\001\002\000\004\026\152\001\002\000\004" +
    "\026\116\001\002\000\004\026\020\001\002\000\006\003" +
    "\022\027\023\001\002\000\004\004\112\001\002\000\004" +
    "\004\uffef\001\002\000\022\003\035\011\025\012\034\013" +
    "\037\014\032\024\030\025\041\033\024\001\002\000\004" +
    "\030\107\001\002\000\004\030\104\001\002\000\024\003" +
    "\035\011\025\012\034\013\037\014\032\024\030\025\041" +
    "\033\024\037\075\001\002\000\024\003\uffe2\011\uffe2\012" +
    "\uffe2\013\uffe2\014\uffe2\024\uffe2\025\uffe2\033\uffe2\037\uffe2" +
    "\001\002\000\004\030\067\001\002\000\024\003\uffe4\011" +
    "\uffe4\012\uffe4\013\uffe4\014\uffe4\024\uffe4\025\uffe4\033\uffe4" +
    "\037\uffe4\001\002\000\004\030\055\001\002\000\024\003" +
    "\uffe6\011\uffe6\012\uffe6\013\uffe6\014\uffe6\024\uffe6\025\uffe6" +
    "\033\uffe6\037\uffe6\001\002\000\004\030\052\001\002\000" +
    "\024\003\uffda\011\uffda\012\uffda\013\uffda\014\uffda\024\uffda" +
    "\025\uffda\033\uffda\037\uffda\001\002\000\024\003\uffe3\011" +
    "\uffe3\012\uffe3\013\uffe3\014\uffe3\024\uffe3\025\uffe3\033\uffe3" +
    "\037\uffe3\001\002\000\004\030\047\001\002\000\024\003" +
    "\uffe7\011\uffe7\012\uffe7\013\uffe7\014\uffe7\024\uffe7\025\uffe7" +
    "\033\uffe7\037\uffe7\001\002\000\004\030\044\001\002\000" +
    "\024\003\uffe1\011\uffe1\012\uffe1\013\uffe1\014\uffe1\024\uffe1" +
    "\025\uffe1\033\uffe1\037\uffe1\001\002\000\024\003\uffe5\011" +
    "\uffe5\012\uffe5\013\uffe5\014\uffe5\024\uffe5\025\uffe5\033\uffe5" +
    "\037\uffe5\001\002\000\004\034\045\001\002\000\004\032" +
    "\046\001\002\000\024\003\uffd9\011\uffd9\012\uffd9\013\uffd9" +
    "\014\uffd9\024\uffd9\025\uffd9\033\uffd9\037\uffd9\001\002\000" +
    "\004\035\050\001\002\000\004\032\051\001\002\000\024" +
    "\003\uffde\011\uffde\012\uffde\013\uffde\014\uffde\024\uffde\025" +
    "\uffde\033\uffde\037\uffde\001\002\000\004\035\053\001\002" +
    "\000\004\032\054\001\002\000\024\003\uffdd\011\uffdd\012" +
    "\uffdd\013\uffdd\014\uffdd\024\uffdd\025\uffdd\033\uffdd\037\uffdd" +
    "\001\002\000\020\015\063\016\057\017\056\020\064\021" +
    "\062\022\061\023\060\001\002\000\004\032\uffd5\001\002" +
    "\000\004\032\uffd2\001\002\000\004\032\uffd6\001\002\000" +
    "\004\032\uffd8\001\002\000\004\032\uffd7\001\002\000\004" +
    "\032\uffd4\001\002\000\004\032\uffd3\001\002\000\004\032" +
    "\066\001\002\000\024\003\uffdb\011\uffdb\012\uffdb\013\uffdb" +
    "\014\uffdb\024\uffdb\025\uffdb\033\uffdb\037\uffdb\001\002\000" +
    "\004\035\070\001\002\000\004\032\071\001\002\000\024" +
    "\003\uffdf\011\uffdf\012\uffdf\013\uffdf\014\uffdf\024\uffdf\025" +
    "\uffdf\033\uffdf\037\uffdf\001\002\000\024\003\uffe9\011\uffe9" +
    "\012\uffe9\013\uffe9\014\uffe9\024\uffe9\025\uffe9\033\uffe9\037" +
    "\uffe9\001\002\000\024\003\uffeb\011\uffeb\012\uffeb\013\uffeb" +
    "\014\uffeb\024\uffeb\025\uffeb\033\uffeb\037\uffeb\001\002\000" +
    "\024\003\uffed\011\uffed\012\uffed\013\uffed\014\uffed\024\uffed" +
    "\025\uffed\033\uffed\037\uffed\001\002\000\006\004\ufff0\036" +
    "\102\001\002\000\024\003\uffea\011\uffea\012\uffea\013\uffea" +
    "\014\uffea\024\uffea\025\uffea\033\uffea\037\uffea\001\002\000" +
    "\024\003\uffee\011\uffee\012\uffee\013\uffee\014\uffee\024\uffee" +
    "\025\uffee\033\uffee\037\uffee\001\002\000\024\003\uffec\011" +
    "\uffec\012\uffec\013\uffec\014\uffec\024\uffec\025\uffec\033\uffec" +
    "\037\uffec\001\002\000\024\003\uffe8\011\uffe8\012\uffe8\013" +
    "\uffe8\014\uffe8\024\uffe8\025\uffe8\033\uffe8\037\uffe8\001\002" +
    "\000\006\003\022\027\023\001\002\000\004\004\ufff1\001" +
    "\002\000\004\031\105\001\002\000\004\032\106\001\002" +
    "\000\024\003\uffe0\011\uffe0\012\uffe0\013\uffe0\014\uffe0\024" +
    "\uffe0\025\uffe0\033\uffe0\037\uffe0\001\002\000\004\034\110" +
    "\001\002\000\004\032\111\001\002\000\024\003\uffdc\011" +
    "\uffdc\012\uffdc\013\uffdc\014\uffdc\024\uffdc\025\uffdc\033\uffdc" +
    "\037\uffdc\001\002\000\004\040\113\001\002\000\004\010" +
    "\114\001\002\000\004\026\115\001\002\000\004\004\ufff9" +
    "\001\002\000\006\003\117\027\120\001\002\000\004\004" +
    "\ufff4\001\002\000\006\011\127\033\126\001\002\000\004" +
    "\004\122\001\002\000\004\040\123\001\002\000\004\006" +
    "\124\001\002\000\004\026\125\001\002\000\004\004\ufffa" +
    "\001\002\000\004\030\143\001\002\000\004\030\134\001" +
    "\002\000\004\037\131\001\002\000\006\004\ufff5\036\132" +
    "\001\002\000\006\003\117\027\120\001\002\000\004\004" +
    "\ufff6\001\002\000\004\031\135\001\002\000\004\032\136" +
    "\001\002\000\004\033\137\001\002\000\004\030\140\001" +
    "\002\000\004\034\141\001\002\000\004\032\142\001\002" +
    "\000\004\037\ufff3\001\002\000\004\034\144\001\002\000" +
    "\004\032\145\001\002\000\004\011\146\001\002\000\004" +
    "\030\147\001\002\000\004\031\150\001\002\000\004\032" +
    "\151\001\002\000\004\037\ufff2\001\002\000\006\003\022" +
    "\027\023\001\002\000\004\004\154\001\002\000\004\040" +
    "\155\001\002\000\004\007\156\001\002\000\004\026\157" +
    "\001\002\000\004\004\ufff8\001\002\000\012\006\163\007" +
    "\161\010\164\040\162\001\002\000\004\026\203\001\002" +
    "\000\004\005\201\001\002\000\004\026\173\001\002\000" +
    "\004\026\165\001\002\000\006\003\022\027\023\001\002" +
    "\000\004\004\167\001\002\000\004\040\170\001\002\000" +
    "\004\010\171\001\002\000\004\026\172\001\002\000\004" +
    "\004\ufffc\001\002\000\006\003\117\027\120\001\002\000" +
    "\004\004\175\001\002\000\004\040\176\001\002\000\004" +
    "\006\177\001\002\000\004\026\200\001\002\000\004\004" +
    "\ufffd\001\002\000\004\026\202\001\002\000\004\002\uffff" +
    "\001\002\000\006\003\022\027\023\001\002\000\004\004" +
    "\205\001\002\000\004\040\206\001\002\000\004\007\207" +
    "\001\002\000\004\026\210\001\002\000\004\004\ufffb\001" +
    "\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\207\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\012\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\020\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\010\025" +
    "\011\037\012\032\013\042\014\030\015\035\016\026\017" +
    "\041\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\011\076\012\073\013\077\014\072\015\075\016\071\017" +
    "\100\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\020\064\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\102\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\120\001\001\000" +
    "\002\001\001\000\004\006\127\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\132\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\007\152\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\165\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\173\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\203" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintactico_configuracion$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintactico_configuracion$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintactico_configuracion$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


 

//variables utilizadas para el analisis sintactico
private boolean estado = true;
private Objeto objeto = null;

public boolean getEstado(){
	return estado;
}

private int verificar_numero(int n_aux){
	if(n_aux < 101 && n_aux > 0){ 
	n_aux = n_aux / 10; n_aux = n_aux  *10;
	} else{
	n_aux = 100;
	}
	return n_aux;
}//fin del metodo para verificar numeros

private boolean verificar_path(String descripcion){
	boolean aceptado = false;
	//se eliminan las comillas que se tienen al inicio y al final de la cadena
    String path_aux = "";
	String path = descripcion.substring(1,descripcion.length()-1);
    if(path.indexOf("/") > -1 ){
        path_aux = path.replaceAll("/","\\");
    }

	File imagen  = new File(path);
	if(imagen.exists()){
		//se guarda la imagen
		aceptado = true;
	}else{
		aceptado = false;
		estado = false;
		//es una descripcion y no imagen
	}
	return aceptado;
}//fin del metodo para separar imagenes de descripciones

/**Metodo al que se llama automáticamente ante algún error sintactico.*/ 
public void syntax_error(Symbol s){ 
 //System.out.println("Error en la Línea " + (s.right+1) +" Columna " +s.left+ ". Identificador " +s.value + " no reconocido." ); 
 Error_encontrado error_sintactico = new Error_encontrado("Archivo configuracion",s.value.toString(), "", s.left, s.right+1, true);
 Arbol_AST.getLista_errores().add(error_sintactico);
} 
 /**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/ 
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
	System.out.println("Error en la Línea " + (s.right+1) +" Columna " +s.left+ ". Identificador " +s.value + " no reconocido." ); 
} 


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Sintactico_configuracion$actions {
  private final Sintactico_configuracion parser;

  /** Constructor */
  CUP$Sintactico_configuracion$actions(Sintactico_configuracion parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Sintactico_configuracion$do_action_part00000000(
    int                        CUP$Sintactico_configuracion$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico_configuracion$parser,
    java.util.Stack            CUP$Sintactico_configuracion$stack,
    int                        CUP$Sintactico_configuracion$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintactico_configuracion$result;

      /* select the action based on the action number */
      switch (CUP$Sintactico_configuracion$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		RESULT = start_val;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintactico_configuracion$parser.done_parsing();
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= ARCHIVO_CONFIGURACION 
            {
              Object RESULT =null;
		
			if(parser.estado == true){
                JOptionPane.showMessageDialog(null,"NO SE HAN ENCONTRADO "
                + "ERRORES","EXITO",JOptionPane.WARNING_MESSAGE);	
			}else{
     			JOptionPane.showMessageDialog(null,"EXISTEN ERRORES LEXICOS O "
                + "SINTACTICOS\n CONSULTE EL AREA DE ERRORES"
                + "","ERROR",JOptionPane.ERROR_MESSAGE);
			} 
			
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARCHIVO_CONFIGURACION ::= abrir_tag r_configuracion cerrar_tag CONFIGURACION abrir_tag s_guion r_configuracion cerrar_tag 
            {
              Object RESULT =null;

              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ARCHIVO_CONFIGURACION",1, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARCHIVO_CONFIGURACION ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ARCHIVO_CONFIGURACION",1, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CONFIGURACION ::= CONFIGURACION abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag 
            {
              Object RESULT =null;
		System.out.println("Se lleno la casilla fondo");
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CONFIGURACION ::= CONFIGURACION abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag 
            {
              Object RESULT =null;
		System.out.println("se lleno la casilla figura");
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CONFIGURACION ::= CONFIGURACION abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag 
            {
              Object RESULT =null;
		System.out.println("se lleno la casilla diseño");
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CONFIGURACION ::= abrir_tag r_fondo cerrar_tag CONFIGURACION_FONDO abrir_tag s_guion r_fondo cerrar_tag 
            {
              Object RESULT =null;
		System.out.println("Se lleno la casilla fondo");
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CONFIGURACION ::= abrir_tag r_figura cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_figura cerrar_tag 
            {
              Object RESULT =null;
		System.out.println("se lleno la casilla figura");
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CONFIGURACION ::= abrir_tag r_disenio cerrar_tag DECLARAR_ATRIBUTOS abrir_tag s_guion r_disenio cerrar_tag 
            {
              Object RESULT =null;
		System.out.println("se lleno la casilla diseño");
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CONFIGURACION ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",2, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CONFIGURACION_FONDO ::= llave_abrir FONDO llave_cerrar s_coma CONFIGURACION_FONDO 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)).right;
		Objeto f = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)).value;
		Arbol_AST.getTabla_objetos().put(f.getNombre(), f);
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_FONDO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CONFIGURACION_FONDO ::= llave_abrir FONDO llave_cerrar 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto f = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		Arbol_AST.getTabla_objetos().put(f.getNombre(), f);
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_FONDO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CONFIGURACION_FONDO ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("CONFIGURACION_FONDO",3, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // FONDO ::= r_nombre s_igual atributo_nombre s_punto_coma r_imagen s_igual descripcion s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-5)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-5)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-5)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
			if(verificar_path(i.toString())==true){
				objeto = new Objeto(n.toString(),i.toString(),0,0,"fondo","");
				RESULT = objeto;
			}else{
			  	objeto = new Objeto(n.toString(),"",0,0,"fondo","");
			  	RESULT = objeto;
			}
			
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("FONDO",4, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // FONDO ::= r_imagen s_igual descripcion s_punto_coma r_nombre s_igual atributo_nombre s_punto_coma 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-5)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-5)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
			if(verificar_path(i.toString())==true){
				objeto = new Objeto(n.toString(),i.toString(),0,0,"fondo","");
				RESULT = objeto;
			}else{
			  	objeto = new Objeto(n.toString(),"",0,0,"fondo","");
			  	RESULT = objeto;
			}
			
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("FONDO",4, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // DECLARAR_ATRIBUTOS ::= llave_abrir ATRIBUTOS llave_cerrar s_coma DECLARAR_ATRIBUTOS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)).value;
		Arbol_AST.getTabla_objetos().put(a.getNombre(), a);
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("DECLARAR_ATRIBUTOS",5, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // DECLARAR_ATRIBUTOS ::= llave_abrir ATRIBUTOS llave_cerrar 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		Arbol_AST.getTabla_objetos().put(a.getNombre(), a);
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("DECLARAR_ATRIBUTOS",5, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // DECLARAR_ATRIBUTOS ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("DECLARAR_ATRIBUTOS",5, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_NOMBRE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setNombre(n.toString()); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_VIDA 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setVida(Integer.parseInt(v.toString())); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_DESTRUIR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object d = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setDestruir(Integer.parseInt(d.toString())); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_CREDITOS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object d = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setCreditos(Integer.parseInt(d.toString())); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_IMAGEN 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setImagen(i.toString()); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_TIPO 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setTipo(t.toString()); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ATRIBUTOS ::= ATRIBUTOS ATRIBUTO_DESCRIPCION 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Objeto a = (Objeto)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object d = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		a.setDescripcion(d.toString()); RESULT = a;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ATRIBUTOS ::= ATRIBUTO_NOMBRE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setNombre(a.toString()); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ATRIBUTOS ::= ATRIBUTO_VIDA 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setVida(Integer.parseInt(a.toString())); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ATRIBUTOS ::= ATRIBUTO_DESTRUIR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setDestruir(Integer.parseInt(a.toString())); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ATRIBUTOS ::= ATRIBUTO_CREDITOS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setCreditos(Integer.parseInt(a.toString())); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ATRIBUTOS ::= ATRIBUTO_IMAGEN 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setImagen(a.toString()); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ATRIBUTOS ::= ATRIBUTO_TIPO 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setTipo(a.toString()); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ATRIBUTOS ::= ATRIBUTO_DESCRIPCION 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		objeto = new Objeto(); objeto.setDescripcion(a.toString()); RESULT = objeto;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTOS",6, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ATRIBUTO_NOMBRE ::= r_nombre s_igual atributo_nombre s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
					RESULT = n;
					
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_NOMBRE",7, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ATRIBUTO_DESTRUIR ::= r_destruir s_igual numero s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
						int n_aux = Integer.parseInt(n.toString());
						RESULT = parser.verificar_numero(n_aux);
						
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_DESTRUIR",9, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ATRIBUTO_VIDA ::= r_vida s_igual numero s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
					int n_aux = Integer.parseInt(n.toString());
					RESULT = parser.verificar_numero(n_aux);
					
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_VIDA",8, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ATRIBUTO_CREDITOS ::= r_creditos s_igual numero s_punto_coma 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
						int n_aux = Integer.parseInt(n.toString());
						RESULT = parser.verificar_numero(n_aux);
						
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_CREDITOS",10, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ATRIBUTO_IMAGEN ::= r_imagen s_igual descripcion s_punto_coma 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		
					if(verificar_path(p.toString())== true){
						RESULT = p;
					}else{
						RESULT = "";
					}
					
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_IMAGEN",11, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ATRIBUTO_TIPO ::= r_tipo s_igual TIPO s_punto_coma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		RESULT = t;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_TIPO",12, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ATRIBUTO_TIPO ::= error 
            {
              Object RESULT =null;
		parser.estado = false;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_TIPO",12, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ATRIBUTO_DESCRIPCION ::= r_descripcion s_igual descripcion s_punto_coma 
            {
              Object RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).right;
		Object d = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-1)).value;
		RESULT = d.toString();
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("ATRIBUTO_DESCRIPCION",13, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.elementAt(CUP$Sintactico_configuracion$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TIPO ::= r_heroe 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TIPO ::= r_enemigo 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TIPO ::= r_meta 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TIPO ::= r_bomba 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TIPO ::= r_arma 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TIPO ::= r_bonus 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // TIPO ::= r_bloque 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico_configuracion$stack.peek()).value;
		RESULT = r;
              CUP$Sintactico_configuracion$result = parser.getSymbolFactory().newSymbol("TIPO",14, ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico_configuracion$stack.peek()), RESULT);
            }
          return CUP$Sintactico_configuracion$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Sintactico_configuracion$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Sintactico_configuracion$do_action(
    int                        CUP$Sintactico_configuracion$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico_configuracion$parser,
    java.util.Stack            CUP$Sintactico_configuracion$stack,
    int                        CUP$Sintactico_configuracion$top)
    throws java.lang.Exception
    {
              return CUP$Sintactico_configuracion$do_action_part00000000(
                               CUP$Sintactico_configuracion$act_num,
                               CUP$Sintactico_configuracion$parser,
                               CUP$Sintactico_configuracion$stack,
                               CUP$Sintactico_configuracion$top);
    }
}

}
